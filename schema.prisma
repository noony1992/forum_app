generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
}

model comments {
  id        Int      @id @unique(map: "sqlite_autoindex_comments_1") @default(autoincrement())
  threadid  Int      
  text      String
  createdAt String    
  author    Int      
  thread    thread   @relation(fields: [threadid], references: [id], onDelete: Cascade) 
  user      user     @relation(fields: [author], references: [id])
  commentReplies commentReplies[] 
}

model thread {
  id        Int      @id @unique(map: "sqlite_autoindex_thread_1") @default(autoincrement())
  title     String
  bodyText  String?
  category  String?
  createdAt String 
  author    Int
  comments  comments[]
  user      user     @relation(fields: [author], references: [id])
}

model user {
  id Int    @id @unique @default(autoincrement())
  username String @unique
  password String 
  admin    Boolean @default(false)
  picture  String @default("person.png")
  email    String?
  threads  thread[]
  comments comments[]
  profile  profile?
  commentReplies commentReplies[]
}

model profile{
  id     Int   @id @unique @default(autoincrement())
  userid Int   @unique
  user   user  @relation(fields: [userid], references: [id])
}

model commentReplies{
  id        Int @id @unique @default(autoincrement())
  commentId Int  
  text      String
  createdAt String    
  author    Int 
  comments  comments @relation(fields: [commentId], references: [id], onDelete: Cascade)
  user      user     @relation(fields: [author], references: [id])
}

model threadCategories{
  id       Int      @id @unique @default(autoincrement())
  category String   @unique
}
